////////////////////////////////////////////////////////////////////////////////
// <Заголовок модуля: краткое описание и условия применения модуля.>
//  
////////////////////////////////////////////////////////////////////////////////
#Область ПрограммныйИнтерфейс
#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура ПолучитьКонстанту(Ответ, Константа, ДатаКонстанты, ВозвращатьСписок, ТипКлюча) Экспорт

	Запрос = Новый Запрос;

	Запрос.Текст = "ВЫБРАТЬ
				   |	pr_ЛокальныеКонстанты.Ссылка КАК Константа,
				   |	pr_ЛокальныеКонстанты.ЭтоПароль КАК ЭтоПароль,
				   |	pr_ЛокальныеКонстанты.Логин
				   |ПОМЕСТИТЬ ЛокальныеКонстанты
				   |ИЗ
				   |	ПланВидовХарактеристик.pr_ЛокальныеКонстанты КАК pr_ЛокальныеКонстанты
				   |ГДЕ
				   |	pr_ЛокальныеКонстанты.Ссылка В (&МассивКонстант)
				   |;
				   |
				   |////////////////////////////////////////////////////////////////////////////////
				   |ВЫБРАТЬ
				   |	КР.Константа КАК Константа,
				   |	КР.Значение КАК Значение
				   |ПОМЕСТИТЬ ЗначенияКонстант
				   |ИЗ
				   |	РегистрСведений.pr_ЛокальныеКонстантыЗначения.СрезПоследних(&ДатаКонстанты, Константа В (&МассивКонстант)) КАК КР
				   |;
				   |
				   |////////////////////////////////////////////////////////////////////////////////
				   |ВЫБРАТЬ
				   |	ЛокальныеКонстанты.Константа КАК Константа,
				   |	ЛокальныеКонстанты.ЭтоПароль КАК ЭтоПароль,
				   |	ЗначенияКонстант.Значение КАК Значение,
				   |	ВЫБОР
				   |		КОГДА &ТипКлюча = 0
				   |			ТОГДА ЛокальныеКонстанты.Константа.Код
				   |		ИНАЧЕ ВЫБОР
				   |			КОГДА &ТипКлюча = 1
				   |				ТОГДА ЛокальныеКонстанты.Константа.Идентификатор
				   |			ИНАЧЕ ЛокальныеКонстанты.Константа
				   |		КОНЕЦ
				   |	КОНЕЦ КАК КлючОтвета,
				   |	ЛокальныеКонстанты.Константа.Идентификатор КАК Идентификатор,
				   |	ЛокальныеКонстанты.Логин КАК Логин
				   |ПОМЕСТИТЬ Финал
				   |ИЗ
				   |	ЛокальныеКонстанты КАК ЛокальныеКонстанты
				   |		ЛЕВОЕ СОЕДИНЕНИЕ ЗначенияКонстант КАК ЗначенияКонстант
				   |		ПО (ЛокальныеКонстанты.Константа = ЗначенияКонстант.Константа)
				   |;
				   |
				   |////////////////////////////////////////////////////////////////////////////////
				   |УНИЧТОЖИТЬ ЗначенияКонстант
				   |;
				   |
				   |////////////////////////////////////////////////////////////////////////////////
				   |ВЫБРАТЬ
				   |	Финал.Константа КАК Константа,
				   |	Финал.ЭтоПароль,
				   |	Финал.Значение,
				   |	Финал.КлючОтвета,
				   |	Финал.Идентификатор,
				   |	Финал.Логин,
				   |	СписокКонстанты.ЭлементСписка КАК Коллекция
				   |ИЗ
				   |	Финал КАК Финал
				   |		ЛЕВОЕ СОЕДИНЕНИЕ ПланВидовХарактеристик.pr_ЛокальныеКонстанты.СписокКонстанты КАК СписокКонстанты
				   |		ПО СписокКонстанты.Ссылка = Финал.Константа
				   |		И &ВернутьКолекцию
				   |ИТОГИ
				   |МАКСИМУМ(Значение),
				   |МАКСИМУМ(КлючОтвета),
				   |МАКСИМУМ(Логин),
				   |МАКСИМУМ(ЭтоПароль),
				   |МАКСИМУМ(Идентификатор)
				   |ПО
				   |	Константа";

	Запрос.УстановитьПараметр("МассивКонстант", Константа);
	Запрос.УстановитьПараметр("ДатаКонстанты", ДатаКонстанты);
	Запрос.УстановитьПараметр("ВернутьКолекцию", ВозвращатьСписок);
	Запрос.УстановитьПараметр("ТипКлюча", ТипКлюча);

	ВыборкаГруппировка = Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	Пока ВыборкаГруппировка.Следующий() Цикл
		Значение = Новый Структура;
		Если ВыборкаГруппировка.ЭтоПароль Тогда
			УстановитьПривилегированныйРежим(истина);
			Пароль = ОбщегоНазначения.ПрочитатьДанныеИзБезопасногоХранилища(ВыборкаГруппировка.идентификатор, "Пароль");
			УстановитьПривилегированныйРежим(ложь);
			Значение.Вставить("Логин", ВыборкаГруппировка.Логин);
			Значение.Вставить("Пароль", Пароль);
		ИначеЕсли Не ВозвращатьСписок Тогда
			Значение = ВыборкаГруппировка.Значение;
		Иначе
			Значение.Вставить("Значение", ВыборкаГруппировка.Значение);
			Значение.Вставить("Коллекция", Новый Массив);

			Выборка = ВыборкаГруппировка.Выбрать();
			Пока Выборка.Следующий() Цикл

				Значение.Коллекция.Добавить(Выборка.Коллекция);

			КонецЦикла;
		КонецЕсли;

		Ответ.Вставить(ВыборкаГруппировка.КлючОтвета, Значение);

	КонецЦикла;

КонецПроцедуры //ПолучитьКонстантуРазработки()

#КонецОбласти